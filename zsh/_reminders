#compdef reminders

_get_lists() {
  if ([[ ${+_lists} -eq 0 ]] || _cache_invalid LISTS) && ! _retrieve_cache LISTS; then
    _lists=($(reminders show-lists 2> /dev/null))
    _store_cache LISTS _lists
  fi

  echo $_lists
}

_reminders_show-lists() {
  _message "show all reminders lists"
}

_reminders_show() {
  if [[ ${#words[@]} -eq 2 ]]; then
    lists=($(_get_lists))
    if [[ $lists != "" ]]; then
      _values "lists" $lists
    fi
  fi
}

_reminders_complete() {
  if [[ ${#words[@]} -eq 2 ]]; then
    lists=($(_get_lists))
    if [[ $lists != "" ]]; then
      _values "lists" $lists
    fi
  elif [[ ${#words[@]} -gt 2 ]]; then
    _message "reminder index"
  fi
}

_reminders_add() {
  if [[ ${#words[@]} -eq 2 ]]; then
    lists=($(_get_lists))
    if [[ $lists != "" ]]; then
      _values "lists" $lists
    fi
  elif [[ ${#words[@]} -gt 2 ]]; then
    _message "reminder content"
  fi
}

if (( CURRENT > 2 )); then
  (( CURRENT-- ))
  shift words
  _call_function - _reminders_${words[1]}
  return
else
  local -a _reminders_subcommands
  _reminders_subcommands=(
  'show-lists:show all reminders lists'
  'show:show the reminders on a list'
  'complete:complete a specific reminder on a list'
  'add:add a new reminder on a list'
  )
  _describe -t commands 'reminders subcommands' _reminders_subcommands && ret=0
fi

# vim:ft=zsh:ts=2
